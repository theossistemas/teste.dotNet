// <auto-generated />
using BooksApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BooksApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BooksApi.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<bool>("Promocao")
                        .HasColumnType("bit");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("TotalPagina")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorPromocao")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Isbn")
                        .IsUnique()
                        .HasName("IDX_ISBN");

                    b.HasIndex("Titulo")
                        .HasName("IDX_TITLE");

                    b.ToTable("Livros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autor = "PEDRO SILVA",
                            ImagemUrl = "",
                            Isbn = "123456785",
                            Promocao = false,
                            Resumo = "mauris cursus mattis molestie a iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui accumsan sit amet nulla facilisi morbi tempus iaculis urna id volutpat lacus laoreet non curabitur gravida arcu ac tortor dignissim convallis aenean et tortor at risus viverra adipiscing at in tellus integer feugiat scelerisque varius",
                            Titulo = "Net Core 5.0",
                            TotalPagina = 225,
                            Valor = 150m,
                            ValorPromocao = 0m
                        },
                        new
                        {
                            Id = 2,
                            Autor = "JOSEFA ANTONIA",
                            ImagemUrl = "",
                            Isbn = "123456789101579",
                            Promocao = false,
                            Resumo = "mauris cursus mattis molestie a iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui accumsan sit amet nulla facilisi morbi tempus iaculis urna id volutpat lacus laoreet non curabitur gravida arcu ac tortor dignissim convallis aenean et tortor at risus viverra adipiscing at in tellus integer feugiat scelerisque varius",
                            Titulo = "React ",
                            TotalPagina = 250,
                            Valor = 80m,
                            ValorPromocao = 0m
                        },
                        new
                        {
                            Id = 3,
                            Autor = "GRACILIANO RAMOS",
                            ImagemUrl = "",
                            Isbn = "753214789",
                            Promocao = true,
                            Resumo = "",
                            Titulo = "Angustia",
                            TotalPagina = 157,
                            Valor = 35m,
                            ValorPromocao = 19m
                        });
                });

            modelBuilder.Entity("BooksApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Role")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("IDX_EMAIL");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@email.com",
                            Nome = "Administrador",
                            NomeUsuario = "admin",
                            Role = "admin",
                            Senha = "123456789"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
